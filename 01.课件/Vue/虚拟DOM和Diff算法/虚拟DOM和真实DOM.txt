1.对虚拟DOM与真实DOM的了解

	真实DOM
		真实DOM是一个js对象

		其实就是原生DOM
		DOM对象是标签,元素(粗浅的理解)

		DOM对象其实是html中某些标签抽象化之后得到的结果

		DOM对象其实就是浏览器提供给开发者用于操作页面上标签的接口
			DOM对象是页面上标签的映射对象(双向映射)

			操作DOM对象的话,会影响到页面上标签的效果
			页面上标签变化,也会影响到DOM对象的效果

	虚拟DOM
		虚拟DOM也是一个js对象

		虚拟DOM其实也是对某个标签进行抽象化之后的结果
			虚拟DOM也会使用js对象的属性描绘一个标签的情况
			虚拟DOM与标签并没有映射关系,操作虚拟DOM不会影响到页面上对应的标签

		Vue中,用于创建虚拟DOM对象的是构造函数VNode

2.为什么有了真实DOM,还要有虚拟DOM?
	体量大小
		真实DOM
			对象中,无用属性较多,占用的内存较大,浪费内存

		虚拟DOM
			对象只记录关键性的属性,存储的属性较少,占用的内存较小

	渲染
		真实DOM
			我们操作真实DOM,很有可能导致页面重绘重排,而且操作真实DOM花费的时间会比较久
				当我们修改DOM节点的时候,js线程需要通知GUI线程,后续需要更新页面

		虚拟DOM
			我们操作虚拟DOM,不会导致页面重绘重排,因为虚拟DOM本质就是一个普通的js对象,操作他属于内存级别的操作

总结:
	1.性能来说,虚拟DOM完胜真实DOM
	2.虚拟DOM想要在页面上显示任何的东西,都必须经过真实DOM的操作
		也就是说,虚拟DOM没办法摆脱真实DOM,单独使用









